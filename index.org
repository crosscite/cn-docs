#+STYLE: <link rel="stylesheet" type="text/css" href="css/bootstrap.css"/>
#+STYLE: <style>.example { font-size: 14px; } p { font-size: 16px; line-height: 150%; }</style>
#+STYLE: <style>h1, h2, h3, h4, h5, h6, .example { margin-top: 15px; margin-bottom: 15px; }</style>
#+HTML: <div class="container">
#+TITLE: DOI Content Negotiation

* Introduction

  DOIs provide a persistent link to content. They identify many types of work, 
  from journal articles to research data sets. Typically, someone interacting with 
  DOIs will be a researcher, who will resolve DOIs found in scholarly references 
  to content using a @<a href='http://dx.doi.org'>DOI resolver@</a>. Such
  researchers may not even realise they are using DOIs and a DOI resolver
  since they may follow links with embedded DOIs.

  Yet DOIs can provide more than a permanent, indirect link to content. DOI 
  registration agencies such as CrossRef and DataCite collect bibliographic metadata 
  about the works they link to. This metadata can be retrieved from a DOI resolver
  too, using content negotation to request a particular representation of the metadata.

  For some DOIs content negotiation can be used to retreive different representations
  of a work. For example, some DataCite DOIs identify data sets that may be available
  in a number of data formats and container formats.

* Redirection

  The DOI resolver at dx.doi.org will normally redirect a user to the resource
  location of a DOI. For example, the DOI "10.1126/science.169.3946.635"
  redirects to a landing page describing the article, "The Structure of Ordinary Water".
  Content negotiated requests to dx.doi.org that ask for a content type which isn't
  "text/html" will be redirected to a metadata service hosted by the DOI's registration
  agency. CrossRef and DataCite support content negotiated DOIs via http://data.crossref.org 
  and http://data.datacite.org.

  #+HTML: <div class="row"><div class="span6 offset3">
  #+BEGIN_EXAMPLE
         GET "Accept: text/html"
  http://dx.doi.org/10.1126/science.169.3946.635

                     |
                     |
                     |
                     V

         Publisher landing page 
  http://www.sciencemag.org/content/169/3946/635
  #+END_EXAMPLE
  #+HTML: </div></div>
  
  Normal browser requests or explicit requests for text/html redirect to the content's
  landing page.

  #+HTML: <div class="row"><div class="span6 offset3">
  #+BEGIN_EXAMPLE
         GET "Accept: application/rdf+xml"
  http://dx.doi.org/10.1126/science.169.3946.635 
                     
                     |
                     |
                     |
                     V

         CrossRef metadata service 
  http://data.crossref.org/10.1126/science.169.3946.635
  #+END_EXAMPLE
  #+HTML: </div></div>

  Requests for a data type redirect to a registration agency's metadata service.

* What is Content Negotiation?

  Content negotiation allows a user to request a particular representation of a web 
  resource. DOI resolvers uses content negotation to provide different representations 
  of metadata associated with DOIs.

  A content negotiated request to a DOI resolver is much like a standard HTTP request,
  except server-driven negotiation will take place based on the list of acceptable
  content types a client provides.

** The Accept Header

   Making a content negotiated request requires the use of a HTTP header, "Accept".
   Content types that are acceptable to the client (those that it knows how to parse), 
   each with an optional "quality" value indicating its relative suitability. For example, 
   a client that
   wishes to receive citeproc JSON if it is available, but which can also handle
   RDF XML if citeproc JSON is unavailable, would make a request with an Accept
   header listing both "application/citeproc+json" and "application/rdf+xml":

   #+BEGIN_EXAMPLE
   $ curl -LH "Accept: application/rdf+xml;q=0.5, application/citeproc+json;q=1.0" http://dx.doi.org/10.1126/science.169.3946.635
   #+END_EXAMPLE

   This request favours citeproc JSON but will accept RDF XML if citeproc is unavailable.
   The q values are optional. The request could have been written without them. The
   order of content types then becomes important; more suitable content types should
   be placed at the front of the Accept header.

   #+BEGIN_EXAMPLE
   $ curl -LH "Accept: application/citeproc+json, application/rdf+xml" http://dx.doi.org/10.1126/science.169.3946.635
   #+END_EXAMPLE

** Response Codes

   #+ATTR_HTML: class="table table-bordered table-striped"
   | Code | Meaning                                                    |
   |------+------------------------------------------------------------|
   |  200 | The request was OK.                                        |
   |  400 | Malformed DOI specified (DOI prefix or suffix not present) |
   |  404 | The DOI requested doesn't exist.                           |
   |  406 | Can't serve any requested content type.                    |

   Individual RA metadata services may utilise additional response codes but they will
   always use the response codes above in event of the case described.

   If multiple content types specified by the client are supported by a DOI then the
   content type with the highest "q" value (or, if no "q" values are specified, the one
   that appears first in the "accept" header) will be returned.
   
* Supported Content Types

  Currently two DOI registration agencies have implemented content negotation for their 
  DOIs: CrossRef and DataCite. They support a number of metadata content types, some of
  which are common to both RAs.

  #+ATTR_HTML: class="table table-bordered table-striped"
  | Format                                                                                                       | Content Type                        | CrossRef                                        | DataCite                                        |
  |--------------------------------------------------------------------------------------------------------------+-------------------------------------+-------------------------------------------------+-------------------------------------------------|
  | @<a href='http://www.w3.org/TR/rdf-syntax-grammar/'>RDF XML@</a>                                             | application/rdf+xml                 | @<span class='label label-success'>Yes@</span>  | @<span class='label label-success'>Yes@</span>  |
  | @<a href='http://www.w3.org/TeamSubmission/turtle/'>RDF Turtle@</a>                                          | text/turtle                         | @<span class='label label-success'>Yes@</span>  | @<span class='label label-success'>Yes@</span>  |
  | @<a href='http://gsl-nagoya-u.net/http/pub/citeproc-doc.html'>Citeproc JSON@</a>                             | application/citeproc+json           | @<span class='label label-success'>Yes@</span>  | @<span class='label label-success'>Yes@</span>  |
  | @<a href='http://citationstyles.org/'>Formatted text citation@</a>                                           | text/bibliography                   | @<span class='label label-success'>Yes@</span>  | @<span class='label label-success'>Yes@</span>  |
  | @<a href='http://schema.datacite.org/'>DataCite XML@</a>                                                     | application/x-datacite+xml          | @<span class='label label-important'>No@</span> | @<span class='label label-success'>Yes@</span>  |
  | @<a href='http://www.crossref.org/schema/documentation/unixref1.1/unixref1.1.html'>CrossRef Unixref XML@</a> | application/unixref+xml             | @<span class='label label-success'>Yes@</span>  | @<span class='label label-important'>No@</span> |
  | RDF JSON (JSON serialization of RDF XML)                                                                     | application/rdf+json                | @<span class='label label-success'>Yes@</span>  | @<span class='label label-important'>No@</span> |
  | JSONP (as above but wrapped in callback)                                                                     | application/javascript              | @<span class='label label-success'>Yes@</span>  | @<span class='label label-important'>No@</span> |
  | @<a href='http://en.wikipedia.org/wiki/RIS_(file_format)'>RIS@</a>                                           | application/x-research-info-systems | @<span class='label label-important'>No@</span> | @<span class='label label-success'>Yes@</span>  |
  | Simple text citation                                                                                         | application/x-datacite+text         | @<span class='label label-important'>No@</span> | @<span class='label label-success'>Yes@</span>  |

  Using content negotation it is possible to make a request that favours content types
  specific to a particular registration agency but which will also  degrade to respond 
  with a more standard content type for other registration agencies. For example:

  #+BEGIN_EXAMPLE
  $ curl -LH "Accept: application/unixref+xml;q=1, application/rdf+xml;q=0.5" http://dx.doi.org/10.1126/science.169.3946.635
  #+END_EXAMPLE

  This request will return CrossRef XML for CrossRef DOIs and RDF XML for non-CrossRef 
  DOIs, such as DataCite DOIs.

* CrossRef and DataCite

  CrossRef and DataCite implement additional content types and features. For
  documentation see:

  - http://data.datacite.org
  - http://data.crossref.org

* Getting Help

  Please contact labs@crossref.org or tech@datacite.org for support.

#+HTML: </div>
